Сортировка
Рассмотрим замеры для самого большого файла (на 200000 элементов).
Создание АВЛ дерева  оказалось на 53% дольше создания и сортировки и на  199% дольше сортировки в файле.
Дерево двоичного поиска на основе отсортированного файла (на 20000 элементов) создавалось в 143 раза дольше АВЛ дерева и в 366 раз дольше, чем массив чисел на основе того же файла.
Большую часть времени при сортировке деревом занимает создание ДДП, так как создание отсортированного массива занимает лишь один обход дерева.
Если числа в исходном файле были отсортированы, то время
Дерево двоичного поиска на основе отсортированного в обратном порядке файла (на 20000 элементов) создавалось в 146 раз дольше АВЛ дерева и в 356 раз дольше, чем массив чисел на основе того же файла.
Поиск
Для самого большого файла (на 200000 элементов) поиск в файле занял в 4879 раз больше сравнений, чем ДДП и в 6506 раз больше, чем в АВЛ дереве.
Файлы, отсортированные в прямом и обратном направлениях, оказались худшим случаем для массива и ДДП. Видно, что поиск в массиве и ДДП занял одинаково большое количество сравнений и по сложности равен O(N), а поиск в АВЛ дереве использовал в 914 раз меньше сравнений и по сложности составил O(log2(N)).
Память
Размер узла дерева в байтах: 24
Размер структуры массива в байтах: 24
Размер элемента массива в байтах: 4
Для файла из 200 элементов:
Размер дерева в байтах: 24 * 200 = 4800
Размер массива в байтах: 24 + 4 * 200 = 824
То есть для данного файла дерево занимает в 5.8 раз больше места
Для файла из 20000 элементов:
Размер дерева в байтах: 24 * 20000 = 480000
Размер массива в байтах: 24 + 4 * 20000 = 80024
То есть для данного файла дерево занимает в 5.9 раз больше места
Вывод
Если данные в файле не были изначально отсортированы, поиск в АВЛ дереве занимает примерно одинаковое количество сравнений с ДДП и зависимость количества сравнений от количества элементов логарифмическая. Иначе количество сравнений при поиске в ДДП зависит от количества элементов линейно, как и при поиске в массиве.
Деревья занимают почти в 6 раз больше памяти, чем массив, но поиск в них может занимать в 4-6 тысяч раз меньшее количество сравнений.
